// <auto-generated />
using JWTAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace JWTAPI.Migrations.Data
{
    [DbContext(typeof(DataContext))]
    [Migration("20200502132245_kategori")]
    partial class kategori
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("JWTAPI.Models.AAlt_Kategori", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<int>("SubC_Id");

                    b.HasKey("Id");

                    b.ToTable("AAlt_Kategoriler");
                });

            modelBuilder.Entity("JWTAPI.Models.Alt_Kategori", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Category_Id");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Kitaplar");
                });

            modelBuilder.Entity("JWTAPI.Models.Kategori", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Kategoriler");

                    b.HasData(
                        new { Id = 1, Name = "Kitap" },
                        new { Id = 2, Name = "E-Kitap" },
                        new { Id = 3, Name = "Elektronik" },
                        new { Id = 4, Name = "Hobi & Oyuncak" },
                        new { Id = 5, Name = "Kırtasiye" },
                        new { Id = 6, Name = "Oyun & Konsol" },
                        new { Id = 7, Name = "Müzik" },
                        new { Id = 8, Name = "Dergi" },
                        new { Id = 9, Name = "Hediyelik Eşyalar" },
                        new { Id = 10, Name = "Spor & Outdoor" },
                        new { Id = 11, Name = "Çok Satanlar" },
                        new { Id = 12, Name = "Yeni Çıkan Kitaplar" },
                        new { Id = 13, Name = "Yazarlar" },
                        new { Id = 14, Name = "Yayınevleri" }
                    );
                });

            modelBuilder.Entity("JWTAPI.Models.Sepet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<string>("Photo");

                    b.Property<double>("Price");

                    b.HasKey("Id");

                    b.ToTable("Sepettekiler");
                });

            modelBuilder.Entity("JWTAPI.Models.Slider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Photo");

                    b.HasKey("Id");

                    b.ToTable("Sliders");
                });

            modelBuilder.Entity("JWTAPI.Models.UrunKitapAyrıntı", b =>
                {
                    b.Property<int>("UrunId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Dimensions");

                    b.Property<int>("DoughType");

                    b.Property<string>("Explanation");

                    b.Property<int>("FirstYear");

                    b.Property<string>("Language");

                    b.Property<int>("PageNumber");

                    b.Property<int>("PrintNumber");

                    b.HasKey("UrunId");

                    b.ToTable("UKitapAyrıntıları");
                });

            modelBuilder.Entity("JWTAPI.Models.Ürün_Diğer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand");

                    b.Property<int>("Discount");

                    b.Property<string>("Name");

                    b.Property<string>("P_Type");

                    b.Property<string>("Photo");

                    b.Property<double>("Point");

                    b.Property<double>("Price");

                    b.HasKey("Id");

                    b.ToTable("Ürün_Diğerleri");
                });

            modelBuilder.Entity("JWTAPI.Models.Ürün_Kitap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Author");

                    b.Property<string>("CoverType");

                    b.Property<int>("Discount");

                    b.Property<string>("Name");

                    b.Property<string>("Photo");

                    b.Property<double>("Point");

                    b.Property<double>("Price");

                    b.Property<string>("Publisher");

                    b.Property<int>("SubC_Id");

                    b.HasKey("Id");

                    b.ToTable("Ürün_Kitaplar");
                });
#pragma warning restore 612, 618
        }
    }
}
